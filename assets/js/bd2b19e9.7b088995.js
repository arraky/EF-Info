"use strict";(self.webpackChunkef_website_template=self.webpackChunkef_website_template||[]).push([[984],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>m});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var d=r.createContext({}),p=function(e){var n=r.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=p(e.components);return r.createElement(d.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},c=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,d=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(t),m=o,f=c["".concat(d,".").concat(m)]||c[m]||s[m]||a;return t?r.createElement(f,i(i({ref:n},u),{},{components:t})):r.createElement(f,i({ref:n},u))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=c;var l={};for(var d in n)hasOwnProperty.call(n,d)&&(l[d]=n[d]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=t[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}c.displayName="MDXCreateElement"},9883:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>s,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var r=t(7462),o=(t(7294),t(3905));const a={},i="Numtrip Top Down",l={unversionedId:"numtrip/outdated-top-down",id:"numtrip/outdated-top-down",title:"Numtrip Top Down",description:"Create Playground",source:"@site/docs/numtrip/outdated-top-down.md",sourceDirName:"numtrip",slug:"/numtrip/outdated-top-down",permalink:"/EF-Info/docs/numtrip/outdated-top-down",draft:!1,editUrl:"https://github.com/arraky/EF-Info/tree/main/docs/numtrip/outdated-top-down.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"login-cookies",permalink:"/EF-Info/docs/networks/login-cookies"}},d={},p=[{value:"Create Playground",id:"create-playground",level:2},{value:"Make Field",id:"make-field",level:3},{value:"Generate Numbers",id:"generate-numbers",level:3},{value:"Playing",id:"playing",level:2},{value:"Ask player to choose a field",id:"ask-player-to-choose-a-field",level:3},{value:"Checking for same numbers",id:"checking-for-same-numbers",level:3},{value:"Marked fields treatment",id:"marked-fields-treatment",level:3}],u={toc:p};function s(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"numtrip-top-down"},"Numtrip Top Down"),(0,o.kt)("h2",{id:"create-playground"},"Create Playground"),(0,o.kt)("h3",{id:"make-field"},"Make Field"),(0,o.kt)("p",null,"Create a pleasing UI with rows, coloumns and a field numbering at the sides"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"def fieldnum():\n    print('  ',end='')\n    for i in range(Row):\n        print('    ',i, end=' ')\n    print('')\n")),(0,o.kt)("p",null,"That's the numbering on top of the field (Coloumns)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"def line():\n    print('  ', end='')\n    for i in range(Row):\n        print('+------',end='')\n    print('')\n")),(0,o.kt)("p",null,"That's the dividing line between each row"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"def playground():\n    fieldnum()\n    for i in range(Row):\n        line()\n        print(i,end=' ') #*\n        for j in range(Coloumns):\n            if field[i][j] >=10:\n                len = ' '\n            else:\n                len = '  '\n            print(f'|  ',field[i][j], end=len)\n        print('|')\n    line()\n")),(0,o.kt)("p",null,"Integrates the aforehand made definitions "),(0,o.kt)("p",null,"#* integrates row numbering as well"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"playground()\n")),(0,o.kt)("h3",{id:"generate-numbers"},"Generate Numbers"),(0,o.kt)("p",null,"Generate powers of 2 in a field matrix. Starts the game with random numbers"),(0,o.kt)("h2",{id:"playing"},"Playing"),(0,o.kt)("h3",{id:"ask-player-to-choose-a-field"},"Ask player to choose a field"),(0,o.kt)("p",null,'Ask for Row and Coloumn that the chosen field is in, and save it as "The Chosen one" for now'),(0,o.kt)("h3",{id:"checking-for-same-numbers"},"Checking for same numbers"),(0,o.kt)("p",null,'Mark all the directly adjacent fields to "The Chosen one" that happen to have the same number'),(0,o.kt)("h3",{id:"marked-fields-treatment"},"Marked fields treatment"),(0,o.kt)("p",null,"Remove the numbers in the adjacent fields and multiply the Chosen one by 2.\nEmpty fields should be replaced with fields from above"))}s.isMDXComponent=!0}}]);